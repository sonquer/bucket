@using MediatR
@using Bucket.Domain.Entities
@using Bucket.UseCases.Commands
@using Bucket.UseCases.Queries
@using Microsoft.Fast.Components.FluentUI
@inject IMediator _mediator

<div>
    @foreach (var cluster in Clusters)
    {
        <FluentButton @onclick="async () => await SwitchClusterContext(cluster)">@cluster.Name</FluentButton>
    }
</div>

@code {
    public IEnumerable<ClusterEntity> Clusters = new List<ClusterEntity>();

	protected override async Task OnInitializedAsync()
    {
        Clusters = await _mediator.Send(new ClusterConfigurationsQuery(), CancellationToken.None);
    }

    protected async Task SwitchClusterContext(ClusterEntity clusterEntity)
    {
        await _mediator.Publish(new SwitchCurrentClusterContextCommand(clusterEntity), CancellationToken.None);
    }
}