@page "/pods"

@using MediatR
@using Bucket.Domain.Entities
@using Bucket.UseCases.Commands
@using Bucket.UseCases.Queries
@using Bucket.UseCases.Services
@using k8s.Models
@using Microsoft.Fast.Components.FluentUI

@inject IMediator _mediator
@inject CurrentContextService _currentContextService

<h1>Pods</h1>

@if (_currentContextService.IsConnectedToCluster == false)
{
	<b>Not connected to cluster...</b>
}
else if (PodList == null || PodList.Items == null)
{
	<FluentProgressRing />
}
else
{
	@foreach (var pod in PodList.Items)
	{
		<p>@pod.Name(), @pod.Namespace()</p>
	}
}

@code {
    public V1PodList PodList;

	protected override async Task OnInitializedAsync()
	{
	    PodList = await _mediator.Send(new ListPodsInAllNamespacesQuery(), CancellationToken.None);
		StateHasChanged();
	}
}
